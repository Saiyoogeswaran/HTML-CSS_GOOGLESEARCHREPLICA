.main {
    margin-top: 200px;
    margin-bottom: 20px;
    /*text-align: center;*/
}
/*body {
    color: #000000;
    background-color: whitesmoke;
    font-size: large;
    font-weight: bold;
    text-align: center;
}
*/
.user-input {
    width: 600px;
    height: 24px;
    border-radius: 24px;
    display: block;
    margin-left: auto;
    margin-right: auto;
    padding-left: 30px;
    padding-right: 30px;
    padding-top: 10px;
    padding-bottom: 10px;
    border: 1px solid #dfe1e5;
    
}
.logo-image {
    width: 500px;
    display: block;
    margin-bottom: 25px;
    margin-left: auto;
    margin-right: auto;
}
.btn {
    background-color:#dfe1e5;
    color: #0f1419;
    font-weight: bold;
    /*display: block;
    margin-left: auto;
    margin-right: auto;*/
    border-radius: 20px;
    border: 1px solid #cfd9de ;
    padding-top:8px;
    padding-bottom: 8px;
    padding-left: 16px;
    padding-right: 16px;
    margin-top: 10px;
    margin-right: 10px;
    margin-left: 10px;
}
.btn-wrapper {
    display: flex;
    justify-content: center;
}
.privacy {
    width: 250px;
    display:block;
    margin-left: auto;
    margin-right: auto;
    margin-top: 50px;
    margin-bottom: 50px;
}
a:hover{
    background-color: yellow;
}

/*display block==>stacks on top
  display inline==>vertical alignment 
  class name can be given to any get assigned with unique reference
  so that class name with specific attribute can be used rather than being generic
  in css we call class with dot operator .classname{}
  =>To centre a element in CSS the conditions are:
  1.It should be dislay:block(To have complete control over horizontal)
  2.Must have a width
  3.Set margin left/right:auto
  To centre a button which is inline in nature,we can use text-align or flex box
  btn-wrapper is a flex box*/
